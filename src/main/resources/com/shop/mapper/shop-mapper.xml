<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.shop.mapper.ShopMapper">
	
	<sql id="productColumns">title, price, count, content, category, productName, color, size, managerId</sql>
	<sql id="cartColumns">productNo, count, price, productName, color, size, memberId</sql>
	<sql id="buyColumns">productNo, count, price, productName, color, size, name, phone, address, orderMsg, memberId</sql>

	<resultMap id="categoryMap" type="java.util.HashMap">
        <result javaType="java.lang.String" column="category" property="categoryName"/>
        <result javaType="java.lang.Integer" column="categoryCnt" property="categoryCnt"/>
	</resultMap>
	
	<resultMap id="colorMap" type="java.util.HashMap">
        <result javaType="java.lang.String" column="color" property="colorName"/>
        <result javaType="java.lang.Integer" column="colorCnt" property="colorCnt"/>
	</resultMap>
	
	<!-- <resultMap id="cartListMap" type="java.util.HashMap">
		<result javaType="String" column="title" property="title"/>
		<result javaType="int" column="cartNo" property="cartNo"/>
		<result javaType="int" column="productNo" property="productNo"/>
		<result javaType="int" column="count" property="count"/>
		<result javaType="int" column="price" property="price"/>
		<result javaType="String" column="productName" property="productName"/>
		<result javaType="String" column="color" property="color"/>
		<result javaType="String" column="size" property="size"/>
		<result javaType="java.util.Date" column="regDate" property="regDate"/>
		<result javaType="String" column="memberId" property="memberId"/>
	</resultMap> -->
	
	<!-- Product -->
	
	
	<select id="selectProductByProductNo" resultType="Product">
		select productNo, regDate, <include refid="productColumns"/> from product where productNo = #{ productNo }  
	</select>
	
	<select id="selectProducts" resultType="Product" parameterType="hashmap">
		select productNo, regDate, <include refid="productColumns"/> from product
			<!-- <if test="keyword == '' || category != 'all'">
				where category like concat('%', #{ category }, '%')
			</if>
			<if test="keyword != ''"> -->
			<choose>
				<when test="keyfield != 'all'">
					<if test="keyfield == 'category'">
						where category like concat('%', #{ keyword }, '%')
					</if>
					<if test="keyfield == 'title'">
						where title like concat('%', #{ keyword }, '%')
					</if>
					<if test="keyfield == 'productName'">
						where productName like concat('%', #{ keyword }, '%')
					</if>
					<if test="keyfield == 'category'">
						where content like concat('%', #{ keyword }, '%')
					</if>
				</when>
				<otherwise>
					where title like concat('%', #{ keyword }, '%')
					or productName like concat('%', #{ keyword }, '%')
					or content like concat('%', #{ keyword }, '%')
				</otherwise>
			</choose>
			<!-- and category like concat('%', #{ category }, '%')
			</if> -->
			<if test="sorting == 'regDate'">
				order by productNo desc
			</if>
			<if test="sorting == 'price'">
				order by price 
			</if>
		limit #{ start }, #{ count }
	</select>
	
	<!-- <select id="selectProductsByCategory" resultType="Product">
		select productNo, regDate, <include refid="productColumns"/> from product
		<if test="keyfield == 'category'">
			where category like concat('%', #{ category }, '%')
		</if>
		order by regDate desc
		limit #{ start }, #{ count }
	</select> -->
	
	<select id="selectProductsCount" resultType="int">
		select count(*) from product
	</select>
	
	
	
	<select id="selectCategories" resultMap="categoryMap">
		select category, count(category) categoryCnt from product group by category
	</select>
	
	<select id="selectColors" resultMap="colorMap">
		select color, count(color) colorCnt from product group by color
	</select>
	
	<!-- Cart -->
	
	<select id="selectCarts" resultType="Cart">
		select p.title, cartNo, c.regDate, c.productNo, c.count, c.price, c.productName, c.color, c.size, memberId
		from product p inner join cart c 
		on p.productNo = c.productNo
		where memberId = #{ memberId }
	</select>
	
	<insert id="insertCart" parameterType="Cart" >
		insert into cart(
			<include refid="cartColumns"/>
		) values(
			#{ productNo },
			#{ count },
			#{ price },
			#{ productName }, 
			#{ color },
			#{ size },
			#{ memberId }
		)
	</insert>
	
	<delete id="deleteCart" >
		delete from cart 
		where 
		<choose>
            <when test="codeList.size != 0">
                cartNo in 
                <foreach collection="codeList" item="item" index="index" separator="," open="(" close=")">
                    #{item}
                </foreach>
            </when>
        </choose>
	</delete>
	
	<update id="updateCartCntByCartNo" parameterType="hashmap">
		update cart set count = #{ count } where cartNo = #{ cartNo }	
	</update>

	<!-- member cart -->
	
	<select id="findMyCartList" resultType="Cart" parameterType="String">
		select cartNo, regDate, productNo, count, price, productName, color, size 
		from cart
		where memberId = #{ memberId }
	</select>
	
	<!-- CheckOut -->
	<select id="selectCheckoutList" resultType="Cart">
		select p.title, cartNo, c.regDate, c.productNo, c.count, c.price, c.productName, c.color, c.size, memberId
		from product p inner join cart c 
		on p.productNo = c.productNo
		where memberId = #{ memberId }
		<choose>
            <when test="codeList.size != 0">
                and cartNo in 
                <foreach collection="codeList" item="item" index="index" separator="," open="(" close=")">
                    #{item}
                </foreach>
            </when>
        </choose>
	</select>
	
	<!-- Buy -->
	<insert id="insertBuy" parameterType="Buy" >
		insert into buy(
			<include refid="buyColumns"/>
		) values(
			#{ productNo },
			#{ count },
			#{ price },
			#{ productName }, 
			#{ color },
			#{ size },
			#{ name },
			#{ phone },
			#{ address },
			#{ orderMsg },
			#{ memberId }
		)
	</insert>
	
	<select id="selectBuyList" resultType="Buy">
		select p.title, buyNo, buyDate, b.productNo, b.count, b.price, b.productName, b.color, b.size, name, phone, address, orderMsg, memberId
		from product p inner join buy b 
		where memberId = #{ memberId } 
		order by buyDate desc
	</select>
	
	<select id="selectLatelyBuyList" resultType="Buy" parameterType="hashmap">
		select p.title, buyNo, buyDate, b.productNo, b.count, b.price, b.productName, b.color, b.size, name, phone, address, orderMsg, memberId
		from product p inner join buy b 
		on p.productNo = b.productNo
		where memberId = #{ memberId } 
		order by buyDate desc 
		limit 0, #{ rows }  
	</select>
	
	<update id="updateProductCountByBuy" parameterType="hashmap">
		update product set count = count - #{ count } where productNo = #{ productNo }
	</update>

	<select id="selectCartByCartNo" resultType="Cart">
		select cartNo, regDate, <include refid="cartColumns"/> from cart where cartNo = #{ cartNo }
	</select>
	
	<!-- member buyList -->
	<select id="findMyBuyList" resultType="Buy" parameterType="String">
		select p.title, buyNo, buyDate, b.productNo, b.count, b.price, b.productName, b.color, b.size, name, phone, address, orderMsg, memberId
		from product p inner join buy b 
		on p.productNo = b.productNo
		where memberId = #{ memberId } 
		order by buyDate desc 
	</select>
	
</mapper>
