<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.shop.mapper.ManagerMapper">
	<sql id="productBasicColumns">
		title, price, count, content, category, productName, color, size, regDate
	</sql>
	
	<sql id="productFileBasicColumns">
		fileName, flag, productNo
	</sql>
	
	<!-- insert가 완료된 후 keyColumn(resumeNo)의 값을 vo의 keyProperty(resumeNo)에 저장 -->
	<insert id="insertProduct" parameterType="Product"
			useGeneratedKeys="true" keyColumn="productNo" keyProperty="productNo">
		INSERT INTO product (title, price, count, content, category, productName, color, size)
		VALUES (#{ title }, #{ price }, #{ count }, #{ content }, #{ category }, #{ productName }, #{ color }, #{ size })
	</insert>
	
	<insert id="insertProductFile" parameterType="ProductFile">
		INSERT INTO productfile (
			<include refid="productFileBasicColumns"/>
		)
		VALUES (
	          #{ fileName }
	        , #{ flag }
			, #{ productNo }
		)
	</insert>
	
	<select id="selectProduct" resultType="Product" parameterType="hashmap">
		select <include refid="productBasicColumns"/>, productNo, managerId
		from product
		<if test="keyword != ''">
			<choose>
				<when test='category != "전체"'>
					where category like concat('%', #{ category }, '%')
					and title like concat('%', #{ keyword }, '%')
				</when>
				<otherwise>
					where title like concat('%', #{ keyword }, '%')
				</otherwise>
			</choose>
		</if>
		<if test="keyword == ''">
			<choose>
				<when test='category != "전체"'>
					where category like concat('%', #{ category }, '%')
				</when>
			</choose>
		</if>
		order by productNo desc
	</select>

	<select id="selectProductFile" parameterType="int" resultType="ProductFile">
		select <include refid="productFileBasicColumns"/>
		from productfile
		where productNo = #{ productNo }
		and flag = 1
	</select>
	
	<select id="selectProductByProductNo" resultType="Product">
		select <include refid="productBasicColumns"/>, productNo
		from product
		where productNo = #{ productNo }
	</select>
	
	<select id="selectProductFilesByProductNo" resultType="ProductFile">
		select <include refid="productFileBasicColumns"/>, productFileNo
		from productfile
		where productNo = #{ productNo } and flag = 0
	</select>
	
	<update id="updateProduct" parameterType="Product">
		update product
		set category = #{ category }
			, title = #{ title }
			, productName = #{ productName }
			, size = #{ size }
			, color = #{ color }
			, count = #{ count }
			, price = #{ price }
			, content = #{ content }
		where productNo = #{ productNo }
	</update>
	
	<!-- 대표사진 업데이트 -->
	<update id="updateProductFile" parameterType="ProductFile">
		update productfile
		set fileName = #{ fileName }
		where productNo = #{ productNo } and flag = 1
	</update>
	
	<select id="selectProductFileByProductFileNo" parameterType="int" resultType="ProductFile">
		select <include refid="productFileBasicColumns"/>, productFileNo
		from productfile
		where productFileNo = #{ productFileNo } 
	</select>
	
	<delete id="deleteProductFile" parameterType="int">
		delete from productfile
		where productFileNo = #{ productFileNo }
	</delete>
	
	<delete id="deleteProduct" parameterType="int">
		delete from product
		where productNo = #{ productNo }
	</delete>
	
	<!-- 상품별 구매현황 -->
	<select id="selectProductOrderlist" resultType="Product">
		select count(title)
		from buy b, product p
		where b.productno = p.productno
		group by p.title;
	</select>
	
</mapper>